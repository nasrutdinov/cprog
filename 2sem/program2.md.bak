# Программа  - 2 семестр

## Февраль

### 1. Понятие алгоритма. RAM-модель.  O-символика. 
Приводим пример алгоритма вычисления чисел Фибоначчи. Сравниваем время работы рекурсивной  и итеративной версии.  Считаем количество операций. Лемма о количестве операций $\geq 2^{n/2}$. Пример сортировки массива методом вставки. Считаем количество операций в наихудшем случае.  Квадратичная сортировка. Оценка количества операций сверху. O-символика. Модель памяти. RAM-модель.  

### 1. Практика. 
#Герасимов
  1. Сортировка "пузырьком" (bubble sort): односторонний проход.
  2. Сортировка "пузырьком" (bubble sort): двусторонний проход. 

Обязательное требование - чтение массива из файла. Дополнительно - подсчет времени работы, тестирование крайних случаев, использование динамических массивов. Использование vector<> 

### 2. Сортировки массивов. Сортировка слиянием.  
Квадратичные сортировки. Сортировка вставкой, пузырьком и сортировка обменом.  Пример сортировки n log(n). Сортировка слиянием. Рекурсивные алгоритмы. Оценка быстродействия. Анализ рекуррентных соотношений. 

### 2. Практика. 
#Герасимов
  1. Сортировка "слиянием" (merge sort): рекурсивный алгоритм.
  2. Сортировка "слиянием" (merge sort): итеративный алгоритм.

Обязательное требование - чтение массива из файла. Дополнительно - подсчет времени работы, тестирование крайних случаев. 

### 3. Сортировки массивов. Сортировка кучей.  
Структура данных куча. Реализация кучи на массиве. Операции вставки и взятия наименьшего элемента. Сортировка кучей. Оценка быстродействия. Теорема о нижней границе быстродействия алгоритмов сравнения. Цифровая сортировка. 

### 3. Практика. 
#Герасимов
  1. Сортировка "кучей" (heap sort): рекурсивный алгоритм.
  2. Сортировка "кучей" (heap sort): итеративный алгоритм.


### 4. Сортировки массивов.  Быстрая сортировка.  
Быстрая сортировка. Оценка быстродействия - худший случай. Подсчет быстродействия рандомизированного алгоритма. Порядковая статистика. Алгоритм Хоара. Реализация на C++.  Алгоритм Хоара для нахождения k-ой порядковой статистики.

### 4. Практика. 
#Герасимов
  1. "Быстрая" сортировка (quick sort): разделение на две части.
  2. "Быстрая" сортировка (quick sort): разделение на три части.
  
### Контрольная работа (лекция)

1. Вывести оценку рекуррентное соотношение. 
2. Провести оценку быстродействия алгоритма.
3. Доказать оценку O(n).

## Март 

### 5. Динамические структуры данных. Списки. 
Динамические структуры. Однонаправленный и двунаправленный список. Реализация на C++.  Структуры. Пространство имен. Элементы ООП. 

### 5. Практика. 
#Герасимов
  1. Структуры данных (struct): агрегаты и атрибуты.
  2. Двусвязный список: узлы и связи.
  3. Двусвязный список: namespace list, struct Node, struct List.
  4. Двусвязный список: доступ к полям, инициализация и переопределение.

### 6. Структуры данных:  стеки очередь.   
Структуры данных  стек и и очередь. Реализация стека на массиве и списке. Динамическое выделение памяти.  Амортизированное время работы. Реализация стека и очереди в C++ (библиотека STL)   **Мало материала**

### 6. Практика. 
#Герасимов
  1. Двусвязный список: базовые функции для работы с элементами контейнера.
  2. Двусвязный список: расширенные функции для работы с элементами контейнера.

### 7. Хеш-функции. 

Хеш функции, хеш значения, коллизии, обработка коллизий. Свойства хорошей хеш функции, способы построения хеш функций, примеры. Фильтр Блума. Поиск элементов. Хеш таблицы в стандартной библиотеке C++. Шаблонный класс std::unordered_map.

### 7. Практика. 
#Герасимов
  1. Двусвязный список: перегрузка операторов и дополнительные функции.
  
## ? 
1. Чтобы не забыли - дать элементы методы вычислений (решение СЛУ, нахождение корней, таблицы функций)
2. Git
3. Cmake
4. Тестирование 


#Герасимов 
1 из 472
Fwd[2]: Re: Fwd[2]: план проведения ЭВМ
Входящие
Саченков Оскар
	
Приложения8 февр. 2023 г., 15:20 (19 часов назад)
	
кому: мне


С уважением,
Оскар Саченков.


-------- Пересылаемое сообщение --------
От: Саченков Оскар <4works@bk.ru>
Кому: kpotashev <kpotashev@mail.ru>, Lenar Sultanov <ls561@mail.ru>
Дата: вторник, 15 ноября 2022 г., 16:45 +0300
Тема: Fwd: Re: Fwd[2]: план проведения ЭВМ


    Добрый вечер,
    высылаю актуальное РПД, расписанные планы занятий по семестрам (это то, что реализуется последние года),
    отдельным файлом приложены часы по практикам (согласно учебному плану).
    По 4 семестру у меня нет данных по Нуриеву, это надо запросить у него, но насколько я понял, он читает OpenCV.


    -------- Пересылаемое сообщение --------
    От кого: Константин Поташев <kpotashev@mail.ru>
    Кому: Саченков Оскар <4works@bk.ru>
    Копия: Lenar Sultanov <ls561@mail.ru>
    Дата: Суббота, 12 ноября 2022, 16:03 +03:00
    Тема: Re: Fwd[2]: план проведения ЭВМ
    Добрый вечер!
     
    В файлах не увидел предложений по изменениям.
    Если уже есть конкретные идеи, что надо менять, предлагаю их сформулировать, чтобы заранее всем разослать и собраться, обдумав, уже на предметное обсуждение.
     

    С уважением, 
    Поташев К.А.
     
     

        Пятница, 11 ноября 2022, 19:44 +03:00 от Саченков Оскар <4works@bk.ru>:
         
        Добрый вечер,
        вот прям в самую точку, думаю стоит опять собраться, чтобы обсудить.
        К письму прилагаю прошлые наметки курсов по ЭВМ, не уверен, что они самые "последние" с тех обсуждений, т.к. в них присутсвуют противоречия. Но в любом случае надо собраться.
         
        ---------- Forwarded message ---------
        От: Константин Поташев <kpotashev@mail.ru>
        Date: пт, 11 нояб. 2022 г. в 19:09
        Subject: Fwd: план проведения ЭВМ
        To: Герасимов Олег Владимирович <valeriy.karasikov@gmail.com>
         
        -------- Пересылаемое сообщение --------
        От кого: Константин Поташев <kpotashev@mail.ru>
        Кому: OleVGerasimov@kpfu.ru
        Дата: Суббота, 29 октября 2022, 15:31 +03:00
        Тема: план проведения ЭВМ
         
        Олег, приветствую!
         
        В приложении файл структуры курса по ЭВМ, который мы в 2019 г. составляли двумя кафедрами механики.
        Посмотри, пожалуйста. Не знаю, передавали ли его тебе.
        Возможно, пора еще раз всем собраться, чтобы обсудить возможные изменения.
         

        С уважением, 
        Поташев К.А.
         
         
         
        --
        С уважением,
        Саченков Оскар.
         

     
     
     
    --
    С уважением,
    Саченков Оскар.
     

 4 прикрепленных файла  • Просканировано системой Gmail
	

--------------------------------------------------------------------------------
Февраль
--------------------------------------------------------------------------------

[1]

  1. Сортировка "пузырьком" (bubble sort): односторонний проход.
  2. Сортировка "пузырьком" (bubble sort): двусторонний проход.

[2]

  1. Сортировка "слиянием" (merge sort): рекурсивный алгоритм.
  2. Сортировка "слиянием" (merge sort): итеративный алгоритм.

[3]

  1. Сортировка "кучей" (heap sort): рекурсивный алгоритм.
  2. Сортировка "кучей" (heap sort): итеративный алгоритм.

[4]

  1. "Быстрая" сортировка (quick sort): разделение на две части.
  2. "Быстрая" сортировка (quick sort): разделение на три части.

--------------------------------------------------------------------------------
Март
--------------------------------------------------------------------------------

[1]

  1. Контрольная работа №1: работа с массивами, условный перебор элементов.

[2]

  1. Структуры данных (struct): агрегаты и атрибуты.
  2. Двусвязный список: узлы и связи.
  3. Двусвязный список: namespace list, struct Node, struct List.
  4. Двусвязный список: доступ к полям, инициализация и переопределение.

[3]

  1. Двусвязный список: базовые функции для работы с элементами контейнера.
  2. Двусвязный список: расширенные функции для работы с элементами контейнера.

[4]

  1. Двусвязный список: перегрузка операторов и дополнительные функции.

--------------------------------------------------------------------------------
Апрель
--------------------------------------------------------------------------------

[1]

  1. Контрольная работа №2: условный перебор элементов на основе собственной
    реализации двусвязного списка.

[2]

  1. Хеш-функции: основной алгоритм применения в задачах.
  2. Хеш-функции: поиск одинаковых подстрок заданной длины.

[3]

  1. Хеш-функции: определение хешей префиксов.
  2. Хеш-функции: сравнение хешей двух строк.

[4]

  1. Хеш-функции: поиск уникальных подстрок.
  2. Хеш-функции: поиск подстроки в строке (алгоритм Рабина-Карпа).

--------------------------------------------------------------------------------
Май
--------------------------------------------------------------------------------

[1]

  1. Префикс-функции: основной алгоритм применения в задачах.
  2. Префикс-функции: прямой алгоритм определения значений префикс-функции.

[2]

  1. Префикс-функции: улучшенный алгоритм определения значений префикс-функции.
  2. Префикс-функции: поиск подстроки в строке (алгоритм Кнута-Морриса-Пратта).

[3]

  1. Проверка выполненных за семестр домашних упражнений.
  2. Выполнение заданий на дополнительные баллы.

[4]

  1. Углубленное изучение инструментов для работы с файловыми потоками.
  2. Решение дополнительных задач повышенной сложности.




