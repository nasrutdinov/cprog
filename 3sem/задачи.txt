Сборник практических заданий по языку Си++. Учебно-методическое пособие для студентов бакалавриата 2 курса, обучающихся по направлению «Прикладная математика».
Москва, 2016. https://al.cs.msu.ru/node/4 



## 1. Абстрактные типы данных (АТД)

### 2.1. Список. 

Создать класс — Список, элемент данных — int (либо произвольного типа).
Члены-данные класса должны находиться в закрытой области класса. Определить необходимые конструкторы. 
Обеспечить корректное уничтожение объектов. В классе должны быть функции:
- добавления элемента в начало (push_front) и в конец (push_back),
- чтение первого элемента списка (front),
- чтение последнего элемента списка (back),
- удаление первого элемента списка (pop_front),
- удаление последнего элемента списка (pop_back),
- добавление элемента x перед позицией p ( insert(p,x)),
- удаление элемента из позиции p (erase(p))
- проверка списка на пустоту (empty),
- текущее число элементов (size),
- вывод информации об элементах списка (print).

Использование STL запрещено. ПРивести пример использования в программе. 
Пример работы: MyList l; l.push_front(1); l.print(); и т.д.


### 2.2. Очередь для хранения данных на основе списка. 

На основе класса Список (см. п.2.1) определить класс Очередь, который должен быть
производным от класса Список. Элемент данных  — int (либо произвольного типа).
Максимальный допустимый размер очереди определен по умолчанию, а также может явно
указываться при создании объекта-Очереди. 

В классе должны быть функции:

- добавления элемента в конец очереди (back),
- чтение первого элемента из очереди без его удаления (front) ,
- удаление первого элемента очереди (pop),
- проверка очереди на пустоту (empty),
- текущее число элементов (size),
- проверка, что очередь целиком заполнена (full).
- вывод информации об элементах очереди без ее изменения (print).

Обеспечить корректное уничтожение объектов. Использование STL запрещено.
Пример работы: Queue q1(5), q2; q1.back(el); cout<<q2.size(); и т.д. 


### 2.3. Очередь для хранения данных на основе массива.
Определить класс Очередь, для хранения данных использовать массив.
Элемент данных — int (либо произвольного типа).
Максимальный допустимый размер очереди указывается при создании каждого объекта-
Очереди.

В классе должны быть функции:

- добавления элемента в конец очереди (back),
- чтение первого элемента из очереди без его удаления (front) ,
- удаление первого элемента очереди (pop),
- проверка очереди на пустоту (empty),
- текущее число элементов (size),
- проверка, что очередь целиком заполнена (full).
- вывод информации об элементах очереди без ее изменения (print).

Обеспечить корректное уничтожение объектов. Использование STL запрещено.



###  2.4. Стек для хранения данных.

Определить класс Стек, для хранения данных использовать массив.
Элемент данных — см. вариант задания.
Максимальный допустимый размер стека указывается при создании каждого объекта-Стек.

В классе должны быть функции:

- добавление элемента на вершину стека (push),
- удаление верхнего элемента стека без его просмотра (pop) ,
- получение элемента с вершины стека (top),
- проверка стека на пустоту (empty),
- текущее число элементов (size),
- проверка, что стек полон (full),
- вывод информации об элементах стека без его изменения (print).

Обеспечить корректное уничтожение объектов.

Использование STL запрещено.

###   2.5. Варианты данных, которые помещаются в очередь/стек.

Реализовать предыдущие задания раздела со следующими элементами данных: 

1. Элемент данных - объект, содержащий информацию о клиенте: фамилия, время
добавления в очередь (целое или строка). Хранится также информация о текущем
количестве клиентов в очереди.
2. Элемент данных – объект, содержащий информацию о заказе: название фирмы, номер
телефона (целое или строка), номер заказа. Нумерация заказов единая для всех списков
или очередей.
3. Элемент данных – объект, содержащий информацию о книге: автор, название, год
издания, код - номер книги в порядке поступления (нумерация единая для всех
очередей/списков).
4. Элемент данных – объект, содержащий информацию о работе с файлом: имя файла, вид
операции (чтение, запись, чтение+запись). В классе должна храниться информация о
количестве файлов в очереди/списке.
5. Элемент данных – объект «банковский счет». Необходимые члены-данные: номер счета,
владелец счета, дата создания счета (число или строка), сумма денег, которая на нем
хранится. Нумерация счетов единая для всех очередей (списков ).